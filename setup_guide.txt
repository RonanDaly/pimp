Setup guide
===========

This is setup guide for the PiMP pipeline, written for an Ubuntu system ... but I guess it's more or less the same for OS X?

0. Install mzmatch alongside with its required packages
http://mzmatch.sourceforge.net/installation.php

1. Install curl-config, required for RCurl below
$ sudo apt-get install libcurl4-openssl-dev

2. Install the R packages required for PiMP
$ R
> install.packages('doParallel')
> install.packages('gptk')
> install.packages('outliers')
> install.packages('XLConnect')
> install.packages('RJSONIO')
> install.packages('RCurl')
> source('http://bioconductor.org/biocLite.R')
> biocLite('impute')
> biocLite('limma')

3. Install the PiMP package locally. Needs root permission to place mzmatch_2.0.jar in /usr/local.
$ cd /home/joewandy/git/pimp
$ sudo R CMD INSTALL PiMP

4. Install the R packages required for PiMPDB
$ R
> install.packages('RUnit')
> install.packages('DBI')

5. Install the PiMPDB package locally
$ cd /home/joewandy/git/pimp
$ R CMD INSTALL PiMPDB

6. Install virtualenv for python if you haven't done so
$ sudo easy_install virtualenv
$ cd ~
$ mkdir virtual_envs
$ virtualenv virtual_envs/pimp_env

7. Activate virtualenv and install MySQL development and XML libraries
$ source virtual_envs/pimp_env/bin/activate
$ sudo apt-get install libmysqlclient-dev libxml2-dev libxslt1-dev

8. We don't need MDP anymore so comment out that line in requirements.txt. Also specify django to be version 1.7 .. 
so inside requirements.txt now

Django==1.7
django-registration
django-extensions
numpy
# -e git://github.com/mdp-toolkit/mdp-toolkit#egg=MDP
lxml
mysql-python
rpy2==2.3.10
celery
django-celery

9. Install the rest of the required packages for django-project specified in requirements.txt 
$ pip install -r git/pimp/django_projects/requirements.txt

10. Configure settings_dev.py in e.g. /home/joewandy/git/pimp/django_projects/pimp/pimp and adjust all the hardcoded path inside.

11. Create db tables
$ cd /home/joewandy/git/pimp/django_projects/pimp
$ python manage.py migrate

12. Create a superuser manually
$ cd /home/joewandy/git/pimp/django_projects/pimp
$ python manage.py createsuperuser --settings=pimp.settings_dev

Then go to the django admin page, and fill up the first and last names of the superuser. Run the server with:
$ python manage.py runserver --settings=pimp.settings_dev
Then open http://localhost:8000/admin/ in browser. 
Click [Users], find the superuser created above and edit to fill up its first and last names.

13. Set up default configuration parameters
$ python manage.py shell_plus --settings=pimp.settings_dev

Run all the following commands inside the shell

from experiments.models import DefaultParameter
p = DefaultParameter(name="iqr",value=0.5,state=True)
p.save()
p = DefaultParameter(name="rsd",value=0.5,state=True)
p.save()
p = DefaultParameter(name="noise",value=0.8,state=True)
p.save()
p = DefaultParameter(name="ppm",value=3,state=True)
p.save()
p = DefaultParameter(name="mindetection",value=3,state=True)
p.save()
p = DefaultParameter(name="minintensity",value=5000,state=True)
p.save()
p = DefaultParameter(name="rtwindow",value=0.05,state=True)
p.save()
p = DefaultParameter(name="rt.alignment",state=True)
p.save()
p = DefaultParameter(name="normalization", state=False)
p.save()
d = Database(name="kegg")
d.save()
d = Database(name="hmdb")
d.save()
d = Database(name="lipidmaps")
d.save()
