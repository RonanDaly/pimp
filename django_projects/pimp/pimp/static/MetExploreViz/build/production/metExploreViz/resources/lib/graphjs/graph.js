var AbstractEdge=function(){};AbstractEdge.prototype={hide:function(){this.connection.fg.hide();this.connection.bg&&this.bg.connection.hide()}};var EdgeFactory=function(){this.template=new AbstractEdge();this.template.style=new Object();this.template.style.directed=false;this.template.weight=1};EdgeFactory.prototype={build:function(a,c){var b=jQuery.extend(true,{},this.template);b.source=a;b.target=c;return b}};var Graph=function(){this.nodes={};this.edges=[];this.edgeFactory=new EdgeFactory()};Graph.prototype={addNode:function(c,b){if(this.nodes[c]==undefined){this.nodes[c]=new Graph.Node(c,b)}var a=this.nodes[c];return a},addEdge:function(f,g,c){var b=this.addNode(f);var a=this.addNode(g);var d=this.edgeFactory.build(b,a);jQuery.extend(d.style,c);b.edges.push(d);this.edges.push(d);a.edges.push(d)},copy:function(){var b=new Graph();for(var c in this.edges){var a=this.edges[c];b.addEdge(a.source.id,a.target.id)}for(var d in this.nodes){if(this.nodes[d].layer!=undefined){b.nodes[d].layer=this.nodes[d].layer}}return b},removeEdge:function(c){for(var g in this.nodes){var b=this.nodes[g];for(var f in b.edges){var a=b.edges[f];if(a.source.id==c.source.id&&a.target.id==c.target.id){b.edges.splice(f,1)}}}var d=this.edges.indexOf(c);this.edges.splice(d,1)},removeEdges:function(a){for(e in a){this.removeEdge(a[e])}},getNode:function(a){return this.nodes[a]},removeNode:function(d){var b=[];for(var a=0;a<d.edges.length;a++){var c=d.edges[a];b.push(c)}for(e in b){this.removeEdge(b[e])}delete this.nodes[d.id]},getLeafs:function(){var a=new Array();for(var c in this.nodes){var b=this.nodes[c];if(this.nodeOutDegree(b)==0){a.push(b)}}return a},nodeInDegree:function(c){var b=0;for(e in c.edges){var a=c.edges[e].source;if(a.id!=c.id){b++}}return b},nodeOutDegree:function(c){var b=0;for(e in c.edges){var a=c.edges[e].source;if(a.id==c.id){b++}}return b},hierarchicalDrawing:function(){var a=this.extractDAG();a.layerAssignment();a.createGraphWithBends();a.vertexOrdering();for(n in this.nodes){this.nodes[n].layer=a.nodes[n].layer;this.nodes[n].xOrder=a.nodes[n].xOrder}},xOrderShift:function(){var g=[];for(var h in this.nodes){var f=this.nodes[h].layer;if(g[f]==undefined){g[f]=new Array()}g[f].push(this.nodes[h])}varMaxLayerSize=0;for(var a in g){if(varMaxLayerSize<g[a].length){varMaxLayerSize=g[a].length}}for(var d=0;d<g.length;d++){var c=g[d].length;for(h in g[d]){var b=g[d][h];b.xOrder=b.xOrder+Math.floor(varMaxLayerSize/c)}}},createGraphWithBends:function(){for(var a in this.edges){if(Math.abs(this.edges[a].source.layer-this.edges[a].target.layer)>1){this.addBendNodes(this.edges[a])}}},addBendNodes:function(h){console.log("---- Add bend nodes for edge "+h.source.id+","+h.target.id);var f=h.source;var d=h.target;var g=f;for(var c=f.layer-1;c>d.layer;c--){var a=this.addNode("b_"+f.id+"-"+d.id+"_"+c);a.layer=c;this.addEdge(g.id,a.id);g=a}this.addEdge(g.id,d.id)},vertexOrdering:function(){var b=[];for(var d in this.nodes){var a=this.nodes[d].layer;if(b[a]==undefined){b[a]=new Array()}b[a].push(this.nodes[d])}for(l in b){var a=b[l];var c=0;for(d in a){a[d].xOrder=c;c++}}for(l in b){var a=b[l];this.greedySwitch(a)}},greedySwitch:function(g){var h=0;if(g.length==1){return h}else{for(var f=0;f<g.length;f++){for(var d=f+1;d<g.length;d++){h=h+this.getCrossingNumber(g[f],g[d])}}var b=h;var k=0;while(b!=k){b=k;k=0;for(var f=0;f<g.length;f++){for(var d=f+1;d<g.length;d++){var c=g[f];var a=g[d];nbij=this.getCrossingNumber(c,a);c.xOrder=d;a.xOrder=f;nbji=this.getCrossingNumber(c,a);if(nbji<nbij){g[f]=a;g[d]=c;k=k+nbji;console.log("swap "+c.id+" and "+a.id)}else{c.xOrder=f;a.xOrder=d;k=k+nbij}}}}return h}},getTotalCrossings:function(){var c=0;for(n1 in this.nodes){var b=this.nodes[n1];for(n2 in this.nodes){var a=this.nodes[n2];c=c+this.getCrossingNumber(b,a)}}return c},getCrossingNumber:function(c,b){var d=0;if((c.xOrder<b.xOrder)&&(c.layer==b.layer)){for(e1 in c.edges){var a;if(c.edges[e1].source.id==c.id){a=c.edges[e1].target}else{a=c.edges[e1].source}for(e2 in b.edges){var f;if(b.edges[e2].source.id==b.id){f=b.edges[e2].target}else{f=b.edges[e2].source}if((a.layer>c.layer)&&(f.layer>c.layer)&&(f.xOrder<a.xOrder)){d++}}}}return d},isAcyclic:function(){var c=this.copy();var a=c.getLeafs();while(a.length!=0&&Object.keys(c.nodes).length!=0){var b=a.pop();c.removeNode(b);a=c.getLeafs()}if(Object.keys(c.nodes).length==0){return true}if(a.length==0){return false}},getMinimalFAS:function(){var b=new Array();var d=new Graph();var a=new Array();for(e in this.edges){var c=this.edges[e];d.addEdge(c.source.id,c.target.id);if(d.isAcyclic()){b.push(c)}else{d.removeEdge(c);a.push(c)}}return a},extractDAG:function(){var b=this.copy();var a=b.getMinimalFAS();b.removeEdges(a);return b},layerAssignment:function(){var f=Number.MAX_VALUE;finalC=-1;finalW=-1;for(var g=1;g<=2;g++){for(var a=1;a<=4;a++){var d=this.copy();var b=d.minWidthLayerAssignment(a,g);if(b<f){finalC=g;finalW=a;f=b}}}this.minWidthLayerAssignment(finalW,finalC);this.vertexPromotion();this.shiftLayers()},shiftLayers:function(){var b=Number.MAX_VALUE;for(n in this.nodes){var a=this.nodes[n].layer;if(a<b){b=a}}for(n in this.nodes){this.nodes[n].layer=this.nodes[n].layer-b}},promoteVertex:function(a){var d=0;var c=this.getInNodesTo(a);for(x in c){var b=c[x];if(b.layer==a.layer+1){d=d+this.promoteVertex(b)}}a.layer=a.layer+1;d=d-this.getInNodesTo(a).length+this.getOutNodesFrom(a).length;return d},vertexPromotion:function(){var f=this.copy();var b=-1;while(b!=0){b=0;for(x in this.nodes){var a=this.nodes[x];if(this.getInNodesTo(a).length>0){var c=this.promoteVertex(a);var d=(c<0);if(d){b=b+1;f=this.copy()}else{for(n in f.nodes){this.nodes[n].layer=f.nodes[n].layer}}}else{console.log("--- in degree is below zero")}}}},minWidthLayerAssignment:function(g,o){var s=0;var h=new Array();for(var f in this.nodes){h.push(this.nodes[f]);this.nodes[f].layer=-1}var j=new Array();var a=new Array();var m=1;var q=0;var t=0;while(!($(j).not(h).length==0&&$(h).not(j).length==0)){var b=$.grep(h,function(c){return $.inArray(c,j)<0});var k=new Array();for(f in b){var p=this.getOutNodesFrom(b[f]);if($(p).not(a).length==0){k.push(b[f])}}var d=false;var u=Number.MAX_VALUE;if(k.length!=0){d=true;var r=this.quickDegreeSort(k).pop();r.layer=m;j.push(r);u=this.getOutNodesFrom(r);q=q-this.getOutNodesFrom(r).length+1;t=t+this.getInNodesTo(r).length}if(!d||(q>=g&&u<1)||t>=o*g){m=m+1;for(f in j){a.push(j[f])}if(q>s){s=q}q=t;t=0}}return s},getOutNodesFrom:function(b){var a=new Array();for(var c in b.edges){if(b.edges[c].target.id!=b.id){a.push(b.edges[c].target)}}return a},getInNodesTo:function(a){var c=new Array();for(var b in a.edges){if(a.edges[b].source.id!=a.id){c.push(a.edges[b].source)}}return c},getStronglyConnectedComponents:function(){var d=new Array();var c=0;var a=new Array();for(n in this.nodes){var b=this.nodes[n];b.index=undefined;b.lowlink=Number.MAX_VALUE}for(n in this.nodes){var b=this.nodes[n];if(b.index==undefined){this.strongconnect(b,c,d,a)}}return a},strongconnect:function(d,f,g,b){d.index=f;d.lowlink=f;f=f+1;g.push(d);for(e in d.edges){var a=d.edges[e].target;if(a.id!=d.id){if(a.index==undefined){this.strongconnect(a,f,g,b);d.lowlink=Math.min(d.lowlink,a.lowlink)}else{if(g.indexOf(a)!=undefined){d.lowlink=Math.min(d.lowlink,a.lowlink)}}}}if(d.lowlink==d.index){var c=new Array();var a=g.pop();while(a.id!=d.id){c.push(a);var a=g.pop()}c.push(a);b.push(c)}},quickDegreeSort:function(d){if(d.length<=1){return d}var c=Math.floor(d.length/2);var h=d[c];var f=[],b=[],a=[];for(var g in d){this.nodeOutDegree(d[g])<this.nodeOutDegree(h)&&f.push(d[g]);this.nodeOutDegree(d[g])==this.nodeOutDegree(h)&&b.push(d[g]);this.nodeOutDegree(d[g])>this.nodeOutDegree(h)&&a.push(d[g])}return this.quickDegreeSort(f).concat(b).concat(this.quickDegreeSort(a))}};Graph.Node=function(b,a){a=a||{};a.id=b;a.edges=[];a.hide=function(){this.hidden=true;this.shape&&this.shape.hide();for(i in this.edges){(this.edges[i].source.id==b||this.edges[i].target==b)&&this.edges[i].hide&&this.edges[i].hide()}};a.show=function(){this.hidden=false;this.shape&&this.shape.show();for(i in this.edges){(this.edges[i].source.id==b||this.edges[i].target==b)&&this.edges[i].show&&this.edges[i].show()}};a.getAdjacents=function(){return this.edges.map(function(c){if(c.source.id==a.id){return c.target}else{return c.source}})};return a};Graph.Node.prototype={};function BinaryMinHeap(j,f){var a=[];var f=f||"key";var g=function(k){return Math.floor((k-1)/2)};var d=function(k){return 2*k+2};var h=function(k){return 2*k+1};function b(k){var m=g(k);while((m>=0)&&(a[k][f]<a[m][f])){a[k]=a.splice(m,1,a[k])[0];k=m;m=g(k)}}function c(m){var k=h(m);var o=d(m);while(a[k]&&(a[m][f]>a[k][f])||a[o]&&(a[m][f]>a[o][f])){var p=a[k]?a[o]?a[k][f]>a[o][f]?o:k:k:k;a[m]=a.splice(p,1,a[m])[0];m=p;k=h(m);o=d(m)}}this.insert=function(k){(k[f]==undefined)&&(k={key:k});a.push(k);b(a.length-1)};this.min=function(){return a.length==1?undefined:a[0]};this.extractMin=function(){var k=this.min();(a.length==1)&&(a=[])||(a[0]=a.pop())&&c(0);return k};this.changeKey=function(k,m){throw"function not implemented"};this.heapify=function(){for(var k=Math.floor((a.length-2)/2);k>=0;k--){c(k)}};for(i in (j||[])){this.insert(j[i])}};